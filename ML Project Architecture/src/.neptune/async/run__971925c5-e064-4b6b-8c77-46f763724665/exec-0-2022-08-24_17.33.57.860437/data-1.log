{"obj": {"type": "AssignString", "path": ["sys", "name"], "value": "Untitled"}, "version": 1}
{"obj": {"type": "AssignString", "path": ["sys", "description"], "value": ""}, "version": 2}
{"obj": {"type": "AssignString", "path": ["sys", "hostname"], "value": "ALTAFKOP202"}, "version": 3}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": false}, "version": 4}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stdout"]}, "version": 5}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stderr"]}, "version": 6}
{"obj": {"type": "AssignString", "path": ["source_code", "entrypoint"], "value": "train.py"}, "version": 7}
{"obj": {"type": "UploadFileSet", "path": ["source_code", "files"], "file_globs": ["C:\\Users\\RuturajMane\\Desktop\\MNIST_CNN\\mnist-ruturaj\\src\\train.py"], "reset": "False"}, "version": 8}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Info (NVML): NVML Shared Library Not Found. GPU usage metrics may not be reported. For more information, see https://docs.neptune.ai/you-should-know/what-can-you-log-and-display#hardware-consumption\n", "step": null, "ts": 1661342638.943125}]}, "version": 9}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "cpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 10}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "cpu"]}, "version": 11}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "memory"], "min": 0.0, "max": 15.878307342529297, "unit": "GB"}, "version": 12}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "memory"]}, "version": 13}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 15.8, "step": null, "ts": 1661342638.945455}]}, "version": 14}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 10.126434326171875, "step": null, "ts": 1661342638.945455}]}, "version": 15}
{"obj": {"type": "AssignFloat", "path": ["Parameters", "learning_rate"], "value": 0.0001}, "version": 16}
{"obj": {"type": "AssignString", "path": ["Parameters", "Optimizer"], "value": "Adam"}, "version": 17}
{"obj": {"type": "AssignInt", "path": ["Parameters", "Batch_size"], "value": 50}, "version": 18}
{"obj": {"type": "AssignInt", "path": ["Parameters", "Epochs"], "value": 2}, "version": 19}
{"obj": {"type": "AssignString", "path": ["Parameters", "Loss_fn"], "value": "cross_entropy"}, "version": 20}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 56.7, "step": null, "ts": 1661342648.9620686}]}, "version": 21}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 10.102764129638672, "step": null, "ts": 1661342648.9620686}]}, "version": 22}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 56.9, "step": null, "ts": 1661342658.9742992}]}, "version": 23}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 10.00448226928711, "step": null, "ts": 1661342658.9742992}]}, "version": 24}
{"obj": {"type": "LogStrings", "path": ["monitoring", "traceback"], "values": [{"value": "An uncaught exception occurred while run was active on worker ALTAFKOP202.", "step": null, "ts": 1661342661.1741602}, {"value": "Marking run as failed", "step": null, "ts": 1661342661.1741602}, {"value": "Traceback:", "step": null, "ts": 1661342661.1741602}, {"value": "  File \"C:\\Users\\RuturajMane\\Desktop\\MNIST_CNN\\mnist-ruturaj\\src\\train.py\", line 176, in <module>\n    dl, da = fit(epochs, lr, train_loader, val_loader, loss_fn, optm)\n", "step": null, "ts": 1661342661.1741602}, {"value": "  File \"C:\\Users\\RuturajMane\\Desktop\\MNIST_CNN\\mnist-ruturaj\\src\\train.py\", line 90, in fit\n    print(pred.flatten().item())\n", "step": null, "ts": 1661342661.1741602}, {"value": "only one element tensors can be converted to Python scalars", "step": null, "ts": 1661342661.1741602}]}, "version": 25}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": true}, "version": 26}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Traceback (most recent call last):\n", "step": null, "ts": 1661342661.1759121}]}, "version": 27}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"C:\\Users\\RuturajMane\\Desktop\\MNIST_CNN\\mnist-ruturaj\\src\\train.py\", line 176, in <module>\n", "step": null, "ts": 1661342661.1764681}]}, "version": 28}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "    ", "step": null, "ts": 1661342661.1810517}]}, "version": 29}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "dl, da = fit(epochs, lr, train_loader, val_loader, loss_fn, optm)", "step": null, "ts": 1661342661.1810517}]}, "version": 30}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1661342661.1810517}]}, "version": 31}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"C:\\Users\\RuturajMane\\Desktop\\MNIST_CNN\\mnist-ruturaj\\src\\train.py\", line 90, in fit\n", "step": null, "ts": 1661342661.1820526}]}, "version": 32}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "    ", "step": null, "ts": 1661342661.1830513}]}, "version": 33}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "print(pred.flatten().item())", "step": null, "ts": 1661342661.1830513}]}, "version": 34}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1661342661.1830513}]}, "version": 35}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "ValueError", "step": null, "ts": 1661342661.1840527}]}, "version": 36}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": ": ", "step": null, "ts": 1661342661.1840527}]}, "version": 37}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "only one element tensors can be converted to Python scalars", "step": null, "ts": 1661342661.1840527}]}, "version": 38}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1661342661.1840527}]}, "version": 39}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Shutting down background jobs, please wait a moment...\n", "step": null, "ts": 1661342661.185138}]}, "version": 40}
